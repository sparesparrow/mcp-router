name: MCP Router CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  frontend-build:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x]

    steps:
    - uses: actions/checkout@v3
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install dependencies
      run: |
        cd packages/shared
        npm ci
        cd ../frontend
        npm ci
    
    - name: Build shared package
      run: |
        cd packages/shared
        npm run build

    - name: Lint frontend
      run: |
        cd packages/frontend
        npm run lint
    
    - name: Build frontend
      run: |
        cd packages/frontend
        npm run build
    
    - name: Test frontend
      run: |
        cd packages/frontend
        npm test -- --passWithNoTests

  backend-build:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        python-version: [3.9]

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        cd packages/backend
        pip install -r requirements.txt
        pip install pytest pytest-cov
    
    - name: Lint with flake8
      run: |
        pip install flake8
        cd packages/backend
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    
    - name: Test with pytest
      run: |
        cd packages/backend
        pytest --cov=./ --cov-report=xml
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./packages/backend/coverage.xml
        fail_ci_if_error: false

  deploy:
    needs: [frontend-build, backend-build]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    
    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    
    - name: Build and push frontend
      uses: docker/build-push-action@v4
      with:
        context: ./packages/frontend
        push: true
        tags: mcprouter/frontend:latest
    
    - name: Build and push backend
      uses: docker/build-push-action@v4
      with:
        context: ./packages/backend
        push: true
        tags: mcprouter/backend:latest 